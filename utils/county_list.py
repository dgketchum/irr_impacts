import os
import pandas as pd
import numpy as np
from state_county_names_codes import county_code_name, state_name_abbreviation, state_county_code

TARGET_STATES = ['AZ', 'CA', 'CO', 'ID', 'MT', 'NM', 'NV', 'OR', 'UT', 'WA', 'WY']


def included_counties():
    return ['04011',
            '04023',
            '04017',
            '04021',
            '04009',
            '04001',
            '04027',
            '04003',
            '04015',
            '04005',
            '04007',
            '04012',
            '04013',
            '04025',
            '08045',
            '08081',
            '08091',
            '08033',
            '08083',
            '08037',
            '08097',
            '08007',
            '08103',
            '08065',
            '08051',
            '08049',
            '08053',
            '08111',
            '08085',
            '08107',
            '08117',
            '08113',
            '08029',
            '08077',
            '08067',
            '16065',
            '16053',
            '16041',
            '16025',
            '16083',
            '16051',
            '16027',
            '16061',
            '16017',
            '16021',
            '16013',
            '16085',
            '16019',
            '16011',
            '16009',
            '16069',
            '16045',
            '16075',
            '16079',
            '16035',
            '16087',
            '16023',
            '16067',
            '16001',
            '16007',
            '16063',
            '16015',
            '16077',
            '16073',
            '16049',
            '16071',
            '16003',
            '16031',
            '16055',
            '16037',
            '16005',
            '16033',
            '16043',
            '16047',
            '16057',
            '16081',
            '16039',
            '16029',
            '16059',
            '30091',
            '30101',
            '30047',
            '30081',
            '30055',
            '30001',
            '30061',
            '30019',
            '30009',
            '30015',
            '30043',
            '30029',
            '30079',
            '30065',
            '30041',
            '30025',
            '30105',
            '30023',
            '30035',
            '30039',
            '30075',
            '30033',
            '30049',
            '30053',
            '30099',
            '30107',
            '30051',
            '30067',
            '30109',
            '30005',
            '30103',
            '30037',
            '30045',
            '30059',
            '30069',
            '30097',
            '30093',
            '30057',
            '30021',
            '30017',
            '30083',
            '30111',
            '30089',
            '30073',
            '30031',
            '30087',
            '30063',
            '30071',
            '30007',
            '30027',
            '30003',
            '30085',
            '30077',
            '30095',
            '30013',
            '32017',
            '32003',
            '35031',
            '35045',
            '35017',
            '35023',
            '41027',
            '41003',
            '41067',
            '41031',
            '41023',
            '41009',
            '41059',
            '41045',
            '41069',
            '41005',
            '41061',
            '41051',
            '41013',
            '41055',
            '41047',
            '41017',
            '41021',
            '41001',
            '41065',
            '41053',
            '41043',
            '41063',
            '41049',
            '41071',
            '49013',
            '49041',
            '49009',
            '49055',
            '49017',
            '49049',
            '49037',
            '49003',
            '49015',
            '49047',
            '49025',
            '49043',
            '49051',
            '49007',
            '49019',
            '49053',
            '49039',
            '49031',
            '49021',
            '53023',
            '53003',
            '53011',
            '53069',
            '53075',
            '53063',
            '53059',
            '53037',
            '53019',
            '53051',
            '53065',
            '53017',
            '53015',
            '53041',
            '53005',
            '53077',
            '53013',
            '53025',
            '53001',
            '53039',
            '53007',
            '53043',
            '53047',
            '53071',
            '53021',
            '56041',
            '56019',
            '56029',
            '56003',
            '56037',
            '56025',
            '56017',
            '56043',
            '56035',
            '56039',
            '56013',
            '56023',
            '56005',
            '56033']


if __name__ == '__main__':
    file_ = '/home/dgketchum/Downloads/bae_gdp_county.csv'
    df = pd.read_csv(file_, header=0)
    df = df[['name', 'prod']]
    st_nm_abrv = {v: k for k, v in state_name_abbreviation().items()}
    state_names = [k for k, v in st_nm_abrv.items()]
    st_co_name_code = {k: {vv['NAME']: vv['GEOID'] for kk, vv in v.items()} for k, v in state_county_code().items()}
    inlc_co = included_counties()
    state, name = None, None
    tdf = pd.DataFrame(columns=['name', 'prod', 'st'])
    for i, r in df.iterrows():
        if np.isnan(r['prod']):
            nanrow = True
            continue
        name = r['name']
        if name in state_names and nanrow:
            state = name
            state_abv = st_nm_abrv[state]
            nanrow = False
            continue
        if state_abv in TARGET_STATES:
            try:
                code = st_co_name_code[state_abv][name]
            except KeyError:
                print(state_abv, name)
                if state_abv == 'CO':
                    a = 1
            if code in inlc_co:
                tdf.loc[code] = {'name': name, 'prod': r['prod'], 'st': state}
        pass

    cos = included_counties()
    names = [v for k, v in county_code_name().items() if k in cos]

    print(tdf['prod'].sum())

# ========================= EOF ====================================================================
